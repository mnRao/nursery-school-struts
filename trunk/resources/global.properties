# Global
global.title = Duke Corp - Nursery School

format.date = {0,date,dd/MM/yyyy}

# UI
ui.header.language = Language
ui.header.language.english = English
ui.header.language.vietnamese = Vietnamese
ui.header.currentYear = Current year
ui.header.help = Help
ui.header.logout = Log Out
ui.widget.header.student = Student

# Common UI
form.widget.header = 
form.legend = Please fill in the form below 
form.legend.computed = Auto computed values
form.legend.select = Or select inherent
tab.label.first = Create | Update
tab.label.second = Show data
form.gender.male = Male
form.gender.female = Female
form.trueFalse.true = Yes
form.trueFalse.false = No

grid.action.edit = Edit
grid.action.delete = Delete
grid.action.deleteMapping = Delete mapping
grid.action.addAlternativeFeeMap = Add %{getText('label.alternativeFeeMap')}
grid.action.addClass = Add %{getText('label.classes')}
grid.action.addFeeMap = Add %{getText('label.feeMap')}
grid.action.addFeePolicy = Add %{getText('label.feePolicy')}
grid.action.addParent = Add %{getText('label.parent')}
grid.action.addPayment = Add %{getText('label.payment')}
grid.action.excel = Excel
grid.action.excel.breakfast = Breakfast Excel

grid.action.showParent = Show %{getText('label.parent')}
grid.action.showFee = Show %{getText('label.fee')}
grid.action.showFeeMap = Show %{getText('label.feeMap')}
grid.action.showFeePolicy = Show %{getText('label.feePolicy')}

modal.title.all.parent = All %{getText('label.parent')}
modal.title.all.fee = All %{getText('label.fee')}
modal.title.all.feeMap = All %{getText('label.feeMap')}
modal.title.all.feePolicy = All %{getText('label.feePolicy')}
modal.content.empty = No data available

help.title = Data Stewardship Process
help.info = Input data given the following order

# Login
label.username = Username
label.password = Password
label.login = Login
label.rememberMe = Remember me 

# Pages
headTitle.dashboard = Dashboard
headTitle.alternativeFeeMap = Alternative fee map management
headTitle.class = Class management
headTitle.fee = Fee management
headTitle.feeGroup = Fee group management
headTitle.feeMap = Fee map management
headTitle.feePolicy = Fee policy management
headTitle.help = Help
headTitle.month = Month management
headTitle.parent = Parent management
headTitle.payment = Payment management
headTitle.student = Student management

dashboard.activeClasses = Active classes
dashboard.activeStudents = Active students
dashboard.previousMonthIncome = Previous month's income
dashboard.thisMonthIncome = This month's income

# Models

label.classes = Class
label.classes.classesId = ID
label.classes.code = Code
label.classes.currentName = Current name
label.classes.courseId = Course

label.course = Course
label.course.courseId = ID
label.course.startYear = Start year
label.course.endYear = End year

label.fee = Fee
label.fee.feeId = ID
label.fee.name = Name
label.fee.type = Type
label.fee.feeGroupId = Fee group

label.feeGroup = Fee Group
label.feeGroup.feeGroupId = ID
label.feeGroup.name = Name

label.feeMap = Fee map
label.feeMap.feePolicyId = Fee policy
label.feeMap.feeId = Fee
label.feeMap.amount = Amount

label.feePolicy = Fee policy
label.feePolicy.feePolicyId = ID
label.feePolicy.classId = Class
label.feePolicy.monthId = Month
label.feePolicy.feePerNormalMeal = Fee per normal meal
label.feePolicy.penaltyFeePerBreakfast = Penalty fee per breakfast
label.feePolicy.totalBreakfastFee = Total breakfast fee
label.feePolicy.availableDays = Available days

label.month = Month
label.month.monthId = ID
label.month.month = Month
label.month.year = Year
label.month.label = Month

label.parent = Parent
label.parent.parentId = ID
label.parent.name = Name
label.parent.gender = Gender
label.parent.job = Job
label.parent.phoneNumber = Phone number
label.parent.studentId = Student

label.payment = Payment
label.payment.paymentId = ID
label.payment.studentId = Student
label.payment.feePolicyId = Fee policy
label.payment.absenceCount = Absence count
label.payment.hasBreakfast = Has breakfast
label.payment.totalNormalMealFee = Total normal meal fee
label.payment.totalBreakfastFee = Total breakfast fee
label.payment.totalFee = Total fee
label.payment.isPaid = Is paid
label.payment.note = Note

label.student = Student
label.student.studentId = ID
label.student.name = Name
label.student.dateOfBirth = Date of birth
label.student.gender = Gender
label.student.address = Address
label.student.homePhone = Home phone
label.student.isActive = Is active
label.student.description = Description
label.student.classId = Class

label.alternativeFeeMap = Alternative fee map
label.alternativeFeeMap.paymentId = Payment
label.alternativeFeeMap.feeId = Fee
label.alternativeFeeMap.alternativeAmount = Alternative amount

select.course = Select course
select.class = Select class
select.fee = Select fee
select.feePolicy = Select fee policy
select.feeGroup = Select fee group
select.feeType = Select fee type
select.month = Select month
select.parent = Select parent
select.payment = Select payment
select.student = Select student


# Excel
excel.file.prefix_title = Payment of month 
excel.file.prefix_title.studentHasBreakfast = Student having breakfast of month 

excel.header.top.payment = PAYMENT OF
excel.header.top.month = MONTH
excel.header.top.year = YEAR
excel.header.top.availableDays = DAYS
excel.header.top.class = CLASS

# Error
error.no.feePolicy.applied = No fee policy applied. Please specify at least one first
error.no.payment.applied = No payment applied. Please specify at least one first (FOR EACH CLASS)
error.delete.children.first = Could not delete parent without deleting children first
error.login = Invalid username/password. Please try again.
error.login.username = Username is required
error.login.password = Password is required

errors.invalid=${getText(fieldName)} is invalid.
errors.required=${getText(fieldName)} is required.
errors.number=${getText(fieldName)} must be a number.
errors.range=${getText(fieldName)} is not in the range ${min} and ${max}.

errors.constraint.alternativeFeeMap.alternativeAmount = ${getText('label.alternativeFeeMap.alternativeAmount')} must be greater than or equal 0 
errors.constraint.course.years = Start year must equal end year minus 4
errors.constraint.course.startYear = Start year must be greater than 0
errors.constraint.course.endYear = End year must be greater than 0
errors.constraint.month.monthName = Month name must be between 1 and 12
errors.constraint.month.year = Year must be bigger than 0 
errors.constraint.feeMap.amount = Amount must be bigger than 0 
errors.constraint.feePolicy.feePerNormalMeal = ${getText('label.feePolicy.feePerNormalMeal')} must be greater than or equal 0 
errors.constraint.feePolicy.totalBreakfastFee = ${getText('label.feePolicy.totalBreakfastFee')} must be greater than or equal 0 
errors.constraint.feePolicy.penaltyFeePerBreakfast = ${getText('label.feePolicy.penaltyFeePerBreakfast')} must be greater than or equal 0 
errors.constraint.feePolicy.availableDays = ${getText('label.feePolicy.availableDays')} must be greater than 0 
errors.constraint.payment.absenceCount = ${getText('label.payment.absenceCount')} must be greater than or equal 0 
xwork.default.invalid.fieldvalue= Invalid field value for field "{0}"
errors.required.class.courseId = Course is required
errors.required.class.code = Code is required
errors.required.fee.name = Name is required
errors.required.feeGroup.name = Name is required
errors.required.feePolicy.feePerNormalMeal = ${getText('label.feePolicy.feePerNormalMeal')} is required
errors.required.feePolicy.totalBreakfastFee = ${getText('label.feePolicy.totalBreakfastFee')} is required
errors.required.feePolicy.penaltyFeePerBreakfast = ${getText('label.feePolicy.penaltyFeePerBreakfast')} is required
errors.required.student.name = Name is required


# Info
button.back = Back
success.model.create = Successfully created record
table.no.records = No data available

